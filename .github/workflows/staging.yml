name: Staging

on: [push]

env:
  IMAGE_ID: "docker.pkg.github.com/${{ github.repository }}/hello-world"
  IMAGE_TAG: "${{ github.sha }}"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --tag image

      - name: Log into registry
        run: docker login docker.pkg.github.com -u "${{ github.actor }}" --password-stdin <<< "${{ github.token }}"

      - name: Push image
        run: |
          set -o errexit -o nounset -o pipefail
          docker tag image "$IMAGE_ID:$IMAGE_TAG"
          docker push "$IMAGE_ID:$IMAGE_TAG"

  update-infrastructure:
    needs: build
    runs-on: ubuntu-latest
    env:
      KUSTOMIZE_VERSION: v3.5.4
    steps:
      - name: Install kustomize
        run: |
          curl -Lo kustomize.tar.gz "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64.tar.gz"
          tar xf kustomize.tar.gz
          sudo mv kustomize /usr/bin

      - uses: actions/checkout@v2
        with:
          repository: "${{ github.repository }}-infrastructure-staging"
          token: "${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}"

      - name: Patch Kubernetes manifest
        run: |
          set -o errexit -o nounset -o pipefail
          touch kustomization.yaml
          kustomize edit add resource manifest.yaml
          kustomize edit set image "$IMAGE_ID:$IMAGE_TAG"
          kustomize build -o manifest.yaml

      - name: Commit and push patched manifest
        run: |
          curl -u "${{ github.actor }}:${{ github.token }}" "https://api.github.com/users/${{ github.actor }}" > user.json
          git config user.name "$(jq -r .name user.json)"
          git config user.email "$(jq -r .email user.json)"
          git commit manifest.yaml -m "Update image to $IMAGE_TAG"
          git push origin master
